application:
  name: amq-broker-persistence
  rolloutTrigger: ConfigChange
  amq_broker_version: 7.7
  amq_broker_image: registry.redhat.io/amq7/amq-broker
  pullPolicy: IfNotPresent
  volume_capacity: 1G
  replicas: 2

service:
  - name: jolokia
    description: "The Jolokia Management Console Service"
    protocol: TCP
    port: 8161
  - name: amqp
    description: "Plain AMQP protocol service endpoint"
    protocol: TCP
    port: 5672
  - name: mqtt
    description: "Plain MQTT protocol service endpoint"
    protocol: TCP
    port: 1883
  - name: stomp
    description: "Plain STOMP protocol service endpoint"
    protocol: TCP
    port: 61613
  - name: multiplex
    description: "Multiplexed protocol endpoint (CORE+All the others)"
    protocol: TCP
    port: 61616

ping_service:
  name: "{{ .Values.application.name }}-ping-svc"
  port: 8888

nodeport:
  port: 30002
  service: multiplex

parameters:
  amq_protocols: "openwire,amq,stomp,mqtt,hornetq,core"
  amq_admin_role: "admin"
  amq_broker_name: "broker"
  amq_global_max_size: "100 gb"
  amq_require_login: False
  amq_extra_args: ""
  amq_anycast_prefix: "jmx.queue."
  amq_multicast_prefix: "jmx.topic."
  imagestream_namespace: "openshift"
  amq_enable_metrics_plugin: False
  amq_journal_type: "nio"
  amq_data_dir: "/opt/amq/data"
  amq_data_dir_logging: True
  amq_allow_anonymous: False
  amq_clustered: True

templates:
  service: "{{ .Values.application.name }}-svc-headless"
  service_account: "{{ .Values.application.name }}-sa"
  k8s_role: "{{ .Values.application.name }}-role"
  k8s_rolebinding: "{{ .Values.application.name }}-rolebinding"
  deployment: "{{ .Values.application.name }}-deployment"
  route: "{{ .Values.application.name }}-route"
  broker_image: "{{ .Values.application.amq_broker_image }}:{{ .Values.application.amq_broker_version }}"
  override_cm: "{{ .Values.application.name }}-override-cm"
  config_cm: "{{ .Values.application.name }}-config-cm"
  app_secret: "{{ .Values.application.name }}-secret"
  pvc_name: "{{ .Values.application.name}}-persistent-volume"

admin:
  user: admin
  password: password
  cluster_user: cluster_admin
  cluster_password: cluster_password
  role: admin

users:
  - name: demouser
    password: "demo"
    role: user
  - name: anotheruser
    password: "demo1"
    role: user

queues:
  - name: demoQueue
    permissions:
      - grant: consume
        roles:
          - admin
          - user
      - grant: browse
        roles:
          - admin
          - user
      - grant: send
        roles:
          - admin
          - user
      - grant: manage
        roles:
          - admin
